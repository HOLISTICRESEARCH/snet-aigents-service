syntax = "proto3";

package reputation;

message Input {
    string text = 1;
}

message Param { 
    double default = 1;
    double decayed = 2;
    double conservatism = 3;
    double precision = 4;
    bool liquid= 5;
    int64 update_period = 6;
    bool aggregation = 7;
    bool downrating = 8;
    bool fullnorm = 9;
    bool weighting = 10;
    bool denomination = 11;
    bool logratings = 12;
    double ratings = 13;
    double spendings = 14;
    string parents = 15;
    string predictiveness = 16;
    bool rating_bias = 17;
    bool unrated = 18;
}

message Parent {
    string parent_id = 1;
    string child_id = 2;
}

message Rank {
    int64 id = 1;
    int64 rank = 2;
}

message Ranks {
    string date = 1;
    repeated Rank rank_val = 2; 
}

message RankRequest {
    string date = 1;
    string ids = 2;
}

message RankUpdate {
    string date = 1;
}

message Rating {
    string from_rate = 1;
    string type_rate = 2;
    string to_rate = 3;
    double value = 4;
    int64 weight = 5;
    string time = 6;
}

message Ratings {
    repeated Rating rating_val = 1;
}

message RatingFilter {
    string ids = 1;
    string since = 2;
    string until = 3;
}

message Response {
    string text = 1;
}

service ReputationFeed {
    rpc createSession(Input) returns (Response) {}
    rpc closeSession(Input) returns (Response) {}
    rpc req(Input) returns (Response) {}
    rpc reputationRequest(Input) returns (Response) {}
    rpc setParameters(Param) returns (Response) {}
    rpc getParameters(Input) returns (Param) {}
    rpc setParent(Parent) returns (Response) {}
    rpc putRanks(Ranks) returns (Response) {}
    rpc getRanks(RankRequest) returns (Response) {}
    rpc updateRanks(RankUpdate) returns (Response) {}
    rpc putRatings(Ratings) returns (Response) {}
    rpc getRatings(RatingFilter) returns (Response) {}
    rpc clearRanks(Input) returns (Response) {}
    rpc clearRatings(Input) returns (Response) {}
}